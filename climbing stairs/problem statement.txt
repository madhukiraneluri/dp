You are climbing a staircase. It takes n steps to reach the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

 

Example 1:

Input: n = 2
Output: 2
Explanation: There are two ways to climb to the top.
1. 1 step + 1 step
2. 2 steps
Example 2:

Input: n = 3
Output: 3
Explanation: There are three ways to climb to the top.
1. 1 step + 1 step + 1 step
2. 1 step + 2 steps
3. 2 steps + 1 step
 

Constraints:

1 <= n <= 45
imagine we are coming down with steps

method 1: using recursion:
usually if the base case is when ever 2 steps are there then 2 ways to go and 1 step is there means 1 step to go so,
if n<=2: return n
then calculate from  nth step what are the ways from nth step is sos(n-1)+s(n-2) -> returns no of ways